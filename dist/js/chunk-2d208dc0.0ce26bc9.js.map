{"version":3,"sources":["webpack:///./src/views/components/vuesax/notifications/Notifications.vue?f955","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue?8729","webpack:///src/views/components/vuesax/notifications/NotificationsDefault.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue?f04f","webpack:///./src/views/components/vuesax/notifications/NotificationsDefault.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue?f152","webpack:///src/views/components/vuesax/notifications/NotificationsPosition.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue?dcab","webpack:///./src/views/components/vuesax/notifications/NotificationsPosition.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue?3fd9","webpack:///src/views/components/vuesax/notifications/NotificationsIcon.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue?84ab","webpack:///./src/views/components/vuesax/notifications/NotificationsIcon.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue?bb2c","webpack:///src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue?57b6","webpack:///./src/views/components/vuesax/notifications/NotificationsFixedAndFunctionClick.vue","webpack:///./src/views/components/vuesax/notifications/NotificationsTime.vue?82d7","webpack:///./src/views/components/vuesax/notifications/NotificationsTime.vue","webpack:///src/views/components/vuesax/notifications/Notifications.vue","webpack:///./src/views/components/vuesax/notifications/Notifications.vue?70ef","webpack:///./src/views/components/vuesax/notifications/Notifications.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticClass","_v","staticRenderFns","NotificationsDefaultvue_type_template_id_e87db024_render","title","code-toggler","color","type","on","click","$event","$vs","notify","text","random","slot","NotificationsDefaultvue_type_template_id_e87db024_staticRenderFns","NotificationsDefaultvue_type_script_lang_js_","methods","getRandomInt","min","max","Math","floor","concat","notifications_NotificationsDefaultvue_type_script_lang_js_","component","Object","componentNormalizer","NotificationsDefault","NotificationsPositionvue_type_template_id_bbfe40ec_render","list","listPosition","icon","active","position","randomCenter","NotificationsPositionvue_type_template_id_bbfe40ec_staticRenderFns","NotificationsPositionvue_type_script_lang_js_","data","notifications_NotificationsPositionvue_type_script_lang_js_","NotificationsPosition_component","NotificationsPosition","NotificationsIconvue_type_template_id_4accac94_render","href","target","iconPack","randomIcon","NotificationsIconvue_type_template_id_4accac94_staticRenderFns","NotificationsIconvue_type_script_lang_js_","notifications_NotificationsIconvue_type_script_lang_js_","NotificationsIcon_component","NotificationsIcon","NotificationsFixedAndFunctionClickvue_type_template_id_413cecfd_render","myFunction","NotificationsFixedAndFunctionClickvue_type_template_id_413cecfd_staticRenderFns","NotificationsFixedAndFunctionClickvue_type_script_lang_js_","_this","fixed","notifications_NotificationsFixedAndFunctionClickvue_type_script_lang_js_","NotificationsFixedAndFunctionClick_component","NotificationsFixedAndFunctionClick","NotificationsTimevue_type_template_id_4f529c86_render","time","NotificationsTimevue_type_template_id_4f529c86_staticRenderFns","script","NotificationsTime_component","NotificationsTime","Notificationsvue_type_script_lang_js_","components","notifications_Notificationsvue_type_script_lang_js_","Notifications_component","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d208dc0.0ce26bc9.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"notifications-demo\"}},[_c('p',{staticClass:\"mb-4\"},[_vm._v(\"Nice, simple, and interactive notifications\")]),_c('notifications-default'),_c('notifications-position'),_c('notifications-icon'),_c('notifications-fixed-and-function-click'),_c('notifications-time')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Default\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\"To add a notification we have the global function \"),_c('code',[_vm._v(\"$vs.notify\")]),_vm._v(\". The first parameter is a \"),_c('code',[_vm._v(\"json\")]),_vm._v(\" with all the necessary attributes, or if we only want the standard notification we can only add a string with the text of the notification\")]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Primary',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'primary'})}}},[_vm._v(\"Notification Primary\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Success',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'success'})}}},[_vm._v(\"Notification Success\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Danger',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'danger'})}}},[_vm._v(\"Notification Danger\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Warning',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'warning'})}}},[_vm._v(\"Notification Warning\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'dark',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'dark'})}}},[_vm._v(\"Notification Dark\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.random()}}},[_vm._v(\"Notification Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n    <div class=\\\"demo-alignment\\\">\\n\\n      <vs-button\\n        @click=\\\"$vs.notify({\\n          title:'Primary',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'primary'})\\\"\\n        color=\\\"primary\\\"\\n        type=\\\"flat\\\">Notification Primary</vs-button>\\n\\n      <vs-button\\n        @click=\\\"$vs.notify({\\n          title:'Success',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'success'})\\\"\\n        color=\\\"success\\\"\\n        type=\\\"flat\\\">Notification Success</vs-button>\\n\\n      <vs-button\\n        @click=\\\"$vs.notify({\\n          title:'Danger',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'danger'})\\\"\\n        color=\\\"danger\\\"\\n        type=\\\"flat\\\">Notification Danger</vs-button>\\n\\n      <vs-button\\n        @click=\\\"$vs.notify({\\n          title:'Warning',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'warning'})\\\"\\n        color=\\\"warning\\\"\\n        type=\\\"flat\\\">Notification Warning</vs-button>\\n\\n      <vs-button\\n        @click=\\\"$vs.notify({\\n          title:'dark',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'dark'})\\\"\\n        color=\\\"dark\\\"\\n        type=\\\"flat\\\">Notification Dark</vs-button>\\n\\n      <vs-button @click=\\\"random()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Notification Random Color</vs-button>\\n    </div>\\n</template>\\n\\n<script>\\nexport default {\\n  methods: {\\n    random() {\\n      function getRandomInt(min, max) {\\n        return Math.floor(Math.random() * (max - min)) + min;\\n      }\\n      let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n\\n      this.$vs.notify({\\n        title: 'Color',\\n        text: 'Lorem ipsum dolor sit amet, consectetur',\\n        color: color\\n      })\\n\\n    },\\n  }\\n}\\n</script>\\n        \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n    File Name: NotificationsDefault.vue\n    Description: Rendering of default notifications\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Default\" code-toggler>\n        \n        <p>To add a notification we have the global function <code>$vs.notify</code>. The first parameter is a <code>json</code> with all the necessary attributes, or if we only want the standard notification we can only add a string with the text of the notification</p>\n\n        <div class=\"demo-alignment\">\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Primary',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'primary'})\"\n                color=\"primary\"\n                type=\"flat\">Notification Primary</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Success',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'success'})\"\n                color=\"success\"\n                type=\"flat\">Notification Success</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Danger',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'danger'})\"\n                color=\"danger\"\n                type=\"flat\">Notification Danger</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Warning',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'warning'})\"\n                color=\"warning\"\n                type=\"flat\">Notification Warning</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'dark',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'dark'})\"\n                color=\"dark\"\n                type=\"flat\">Notification Dark</vs-button>\n\n            <vs-button @click=\"random()\" color=\"success\" type=\"gradient\">Notification Random Color</vs-button>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n    &lt;div class=&quot;demo-alignment&quot;&gt;\n\n      &lt;vs-button\n        @click=&quot;$vs.notify({\n          title:&apos;Primary&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;primary&apos;})&quot;\n        color=&quot;primary&quot;\n        type=&quot;flat&quot;&gt;Notification Primary&lt;/vs-button&gt;\n\n      &lt;vs-button\n        @click=&quot;$vs.notify({\n          title:&apos;Success&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;success&apos;})&quot;\n        color=&quot;success&quot;\n        type=&quot;flat&quot;&gt;Notification Success&lt;/vs-button&gt;\n\n      &lt;vs-button\n        @click=&quot;$vs.notify({\n          title:&apos;Danger&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;danger&apos;})&quot;\n        color=&quot;danger&quot;\n        type=&quot;flat&quot;&gt;Notification Danger&lt;/vs-button&gt;\n\n      &lt;vs-button\n        @click=&quot;$vs.notify({\n          title:&apos;Warning&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;warning&apos;})&quot;\n        color=&quot;warning&quot;\n        type=&quot;flat&quot;&gt;Notification Warning&lt;/vs-button&gt;\n\n      &lt;vs-button\n        @click=&quot;$vs.notify({\n          title:&apos;dark&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;dark&apos;})&quot;\n        color=&quot;dark&quot;\n        type=&quot;flat&quot;&gt;Notification Dark&lt;/vs-button&gt;\n\n      &lt;vs-button @click=&quot;random()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Notification Random Color&lt;/vs-button&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  methods: {\n    random() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n\n      this.$vs.notify({\n        title: &apos;Color&apos;,\n        text: &apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color: color\n      })\n\n    },\n  }\n}\n&lt;/script&gt;\n        </template>\n\n    </vx-card>\n</template>\n\n<script>\nexport default {\n    methods: {\n        random() {\n            function getRandomInt(min, max) {\n                return Math.floor(Math.random() * (max - min)) + min;\n            }\n            let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n\n            this.$vs.notify({\n                title: 'Color',\n                text: 'Lorem ipsum dolor sit amet, consectetur',\n                color: color\n            })\n\n        },\n    }\n}\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsDefault.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsDefault.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsDefault.vue?vue&type=template&id=e87db024&\"\nimport script from \"./NotificationsDefault.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsDefault.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Position\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\"We can change the place where the notification appears with the property position. A practical example would be: position: 'top-right'. The supported values are\")]),_c('vx-list',{staticClass:\"mt-3\",attrs:{\"list\":_vm.listPosition}}),_c('vs-alert',{staticClass:\"mb-1\",attrs:{\"icon\":\"warning\",\"active\":\"true\",\"color\":\"warning\"}},[_c('span',[_vm._v(\"The default notifications appear \"),_c('code',[_vm._v(\"bottom-right\")]),_vm._v(\", it is not necessary to add the position property if it is the desired position\")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Position Default',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'primary'})}}},[_vm._v(\"Position Default\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Position top-right',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'success',\n                    position:'top-right'})}}},[_vm._v(\"Position Top Right\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Position top-left',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'danger',\n                    position:'top-left'})}}},[_vm._v(\"Position Top Left\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Position bottom-left',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'warning',\n                    position:'bottom-left'})}}},[_vm._v(\"Position Bottom Left\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                    title:'Position bottom-center',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'dark',\n                    position:'bottom-center'})}}},[_vm._v(\" Position Bottom Center\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomCenter()}}},[_vm._v(\"Position Top Center Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n  <div class=\\\"demo-alignment\\\">\\n\\n      <vs-button color=\\\"primary\\\" type=\\\"flat\\\"\\n        @click=\\\"$vs.notify({\\n          title:'Position Default',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'primary'})\\\">Position Default</vs-button>\\n\\n      <vs-button color=\\\"success\\\" type=\\\"flat\\\"\\n        @click=\\\"$vs.notify({\\n          title:'Position top-right',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'success',\\n          position:'top-right'})\\\">Position Top Right</vs-button>\\n\\n      <vs-button color=\\\"danger\\\" type=\\\"flat\\\"\\n        @click=\\\"$vs.notify({\\n          title:'Position top-left',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'danger',\\n          position:'top-left'})\\\">Position Top Left</vs-button>\\n\\n      <vs-button color=\\\"warning\\\" type=\\\"flat\\\"\\n        @click=\\\"$vs.notify({\\n          title:'Position bottom-left',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'warning',\\n          position:'bottom-left'})\\\">Position Bottom Left</vs-button>\\n\\n      <vs-button color=\\\"dark\\\" type=\\\"flat\\\"\\n        @click=\\\"$vs.notify({\\n          title:'Position bottom-center',\\n          text:'Lorem ipsum dolor sit amet, consectetur',\\n          color:'dark',\\n          position:'bottom-center'})\\\"> Position Bottom Center</vs-button>\\n\\n      <vs-button @click=\\\"randomCenter()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Position Top Center Random Color</vs-button>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  methods: {\\n    randomCenter() {\\n      function getRandomInt(min, max) {\\n        return Math.floor(Math.random() * (max - min)) + min;\\n      }\\n      let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n      this.$vs.notify({ title: 'Position top-center', text: 'Lorem ipsum dolor sit amet, consectetur', color: color, position: 'top-center' })\\n    }\\n  }\\n}\\n</script>\\n        \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n    File Name: NotificationsPosition.vue\n    Description: Change position of apperance of notification\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Position\" code-toggler>\n        \n        <p>We can change the place where the notification appears with the property position. A practical example would be: position: 'top-right'. The supported values are</p>\n\n        <vx-list :list=\"listPosition\" class=\"mt-3\"></vx-list>\n\n        <vs-alert icon=\"warning\" active=\"true\" color=\"warning\" class=\"mb-1\">\n            <span>The default notifications appear <code>bottom-right</code>, it is not necessary to add the position property if it is the desired position</span>\n        </vs-alert>\n\n        <div class=\"demo-alignment\">\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Position Default',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'primary'})\"\n                color=\"primary\"\n                type=\"flat\">Position Default</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Position top-right',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'success',\n                    position:'top-right'})\"\n                color=\"success\"\n                type=\"flat\">Position Top Right</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Position top-left',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'danger',\n                    position:'top-left'})\"\n                color=\"danger\"\n                type=\"flat\">Position Top Left</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Position bottom-left',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'warning',\n                    position:'bottom-left'})\"\n                color=\"warning\"\n                type=\"flat\">Position Bottom Left</vs-button>\n\n            <vs-button\n                @click=\"$vs.notify({\n                    title:'Position bottom-center',\n                    text:'Lorem ipsum dolor sit amet, consectetur',\n                    color:'dark',\n                    position:'bottom-center'})\"\n                color=\"dark\"\n                type=\"flat\"> Position Bottom Center</vs-button>\n\n            <vs-button @click=\"randomCenter()\" color=\"success\" type=\"gradient\">Position Top Center Random Color</vs-button>\n        </div>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;div class=&quot;demo-alignment&quot;&gt;\n\n      &lt;vs-button color=&quot;primary&quot; type=&quot;flat&quot;\n        @click=&quot;$vs.notify({\n          title:&apos;Position Default&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;primary&apos;})&quot;&gt;Position Default&lt;/vs-button&gt;\n\n      &lt;vs-button color=&quot;success&quot; type=&quot;flat&quot;\n        @click=&quot;$vs.notify({\n          title:&apos;Position top-right&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;success&apos;,\n          position:&apos;top-right&apos;})&quot;&gt;Position Top Right&lt;/vs-button&gt;\n\n      &lt;vs-button color=&quot;danger&quot; type=&quot;flat&quot;\n        @click=&quot;$vs.notify({\n          title:&apos;Position top-left&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;danger&apos;,\n          position:&apos;top-left&apos;})&quot;&gt;Position Top Left&lt;/vs-button&gt;\n\n      &lt;vs-button color=&quot;warning&quot; type=&quot;flat&quot;\n        @click=&quot;$vs.notify({\n          title:&apos;Position bottom-left&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;warning&apos;,\n          position:&apos;bottom-left&apos;})&quot;&gt;Position Bottom Left&lt;/vs-button&gt;\n\n      &lt;vs-button color=&quot;dark&quot; type=&quot;flat&quot;\n        @click=&quot;$vs.notify({\n          title:&apos;Position bottom-center&apos;,\n          text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n          color:&apos;dark&apos;,\n          position:&apos;bottom-center&apos;})&quot;&gt; Position Bottom Center&lt;/vs-button&gt;\n\n      &lt;vs-button @click=&quot;randomCenter()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Position Top Center Random Color&lt;/vs-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  methods: {\n    randomCenter() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n      this.$vs.notify({ title: &apos;Position top-center&apos;, text: &apos;Lorem ipsum dolor sit amet, consectetur&apos;, color: color, position: &apos;top-center&apos; })\n    }\n  }\n}\n&lt;/script&gt;\n        </template>\n\n    </vx-card>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            listPosition: [\n            \"top-right\",\n            \"top-left\",\n            \"top-center\",\n            \"bottom-right\",\n            \"bottom-left\",\n            ]\n        }\n    },\n    methods: {\n        randomCenter() {\n            function getRandomInt(min, max) {\n                return Math.floor(Math.random() * (max - min)) + min;\n            }\n            let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n            this.$vs.notify({ title: 'Position top-center', text: 'Lorem ipsum dolor sit amet, consectetur', color: color, position: 'top-center' })\n        }\n    }\n}\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsPosition.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsPosition.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsPosition.vue?vue&type=template&id=bbfe40ec&\"\nimport script from \"./NotificationsPosition.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsPosition.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Icon\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\"Notifications can include icons to improve the user experience and to construct a more pleasant and intuitive notification. To make this, use the \"),_c('code',[_vm._v(\"icon\")]),_vm._v(\" property. A practical example would be: \"),_c('code',[_vm._v(\"icon: 'chat'\")])]),_c('vs-alert',{staticClass:\"mt-5\",attrs:{\"color\":\"primary\",\"icon\":\"new_releases\",\"active\":\"true\"}},[_c('p',[_vm._v(\"Vuesax uses the Google Material Icons font library by default. For a list of all available icons, visit the official \"),_c('a',{attrs:{\"href\":\"https://material.io/icons/\",\"target\":\"_blank\"}},[_vm._v(\"Material Icons page\")]),_vm._v(\".\")]),_c('p',[_vm._v(\"FontAwesome and other fonts library are supported. Simply use the icon-pack with fa or fas. You still need to include the Font Awesome icons in your project.\")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'primary',\n          iconPack: 'feather',\n          icon:'icon-mail'})}}},[_vm._v(\"Icon Mail\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'success',\n          iconPack: 'feather',\n          icon:'icon-check'})}}},[_vm._v(\"Icon check_box\")]),_c('vs-button',{attrs:{\"color\":\"danger\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'danger',\n          iconPack: 'feather',\n          icon:'icon-heart'})}}},[_vm._v(\"Icon favorite\")]),_c('vs-button',{attrs:{\"color\":\"warning\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'warning',\n          iconPack: 'feather',\n          icon:'icon-alert-circle'})}}},[_vm._v(\"Icon error\")]),_c('vs-button',{attrs:{\"color\":\"dark\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'dark',\n          iconPack: 'feather',\n          icon:'icon-message-square'})}}},[_vm._v(\"Icon chat\")]),_c('vs-button',{attrs:{\"color\":\"success\",\"type\":\"gradient\"},on:{\"click\":function($event){return _vm.randomIcon()}}},[_vm._v(\"Icon Random Color\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n  <div class=\\\"demo-alignment\\\">\\n\\n    <vs-button color=\\\"primary\\\" type=\\\"flat\\\"\\n      @click=\\\"$vs.notify({\\n        title:'Icon mail',\\n        text:'Lorem ipsum dolor sit amet, consectetur',\\n        color:'primary',\\n        iconPack: 'feather',\\n        icon:'icon-mail'})\\\">Icon Mail</vs-button>\\n\\n    <vs-button color=\\\"success\\\" type=\\\"flat\\\"\\n      @click=\\\"$vs.notify({\\n        title:'Icon mail',\\n        text:'Lorem ipsum dolor sit amet, consectetur',\\n        color:'success',\\n        iconPack: 'feather',\\n        icon:'icon-check'})\\\">Icon check_box</vs-button>\\n\\n    <vs-button color=\\\"danger\\\" type=\\\"flat\\\"\\n      @click=\\\"$vs.notify({\\n        title:'Icon mail',\\n        text:'Lorem ipsum dolor sit amet, consectetur',\\n        color:'danger',\\n        iconPack: 'feather',\\n        icon:'icon-heart'})\\\">Icon favorite</vs-button>\\n\\n    <vs-button color=\\\"warning\\\" type=\\\"flat\\\"\\n      @click=\\\"$vs.notify({\\n        title:'Icon mail',\\n        text:'Lorem ipsum dolor sit amet, consectetur',\\n        color:'warning',\\n        iconPack: 'feather',\\n        icon:'icon-alert-circle'})\\\">Icon error</vs-button>\\n\\n    <vs-button color=\\\"dark\\\" type=\\\"flat\\\"\\n      @click=\\\"$vs.notify({\\n        title:'Icon mail',\\n        text:'Lorem ipsum dolor sit amet, consectetur',\\n        color:'dark',\\n        iconPack: 'feather',\\n        icon:'icon-message-square'})\\\">Icon chat</vs-button>\\n\\n      <vs-button @click=\\\"randomIcon()\\\" color=\\\"success\\\" type=\\\"gradient\\\">Icon Random Color</vs-button>\\n  </div>\\n</template>\\n\\n<script>\\nexport default {\\n  methods: {\\n    randomIcon() {\\n      function getRandomInt(min, max) {\\n        return Math.floor(Math.random() * (max - min)) + min;\\n      }\\n      let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\\n\\n      this.$vs.notify({ title: &apos;Icon mail&apos;, text: &apos;Lorem ipsum dolor sit amet, consectetur&apos;, color: color, icon: &apos;verified_user&apos; })\\n    }\\n  }\\n}\\n</script>\\n    \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n  File Name: NotificationsIcon.vue\n  Description: Add Icons to notifications\n  ----------------------------------------------------------------------------------------\n  Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n  Author: Pixinvent\n  Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n  <vx-card title=\"Icon\" code-toggler>\n    \n    <p>Notifications can include icons to improve the user experience and to construct a more pleasant and intuitive notification. To make this, use the <code>icon</code> property. A practical example would be: <code>icon: 'chat'</code></p>\n\n    <vs-alert color=\"primary\" icon=\"new_releases\" active=\"true\" class=\"mt-5\">\n      <p>Vuesax uses the Google Material Icons font library by default. For a list of all available icons, visit the official <a href=\"https://material.io/icons/\" target=\"_blank\">Material Icons page</a>.</p>\n      <p>FontAwesome and other fonts library are supported. Simply use the icon-pack with fa or fas. You still need to include the Font Awesome icons in your project.</p>\n    </vs-alert>\n\n    <div class=\"demo-alignment\">\n      \n      <vs-button color=\"primary\" type=\"flat\"\n        @click=\"$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'primary',\n          iconPack: 'feather',\n          icon:'icon-mail'})\">Icon Mail</vs-button>\n\n      <vs-button color=\"success\" type=\"flat\"\n        @click=\"$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'success',\n          iconPack: 'feather',\n          icon:'icon-check'})\">Icon check_box</vs-button>\n\n      <vs-button color=\"danger\" type=\"flat\"\n        @click=\"$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'danger',\n          iconPack: 'feather',\n          icon:'icon-heart'})\">Icon favorite</vs-button>\n\n      <vs-button color=\"warning\" type=\"flat\"\n        @click=\"$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'warning',\n          iconPack: 'feather',\n          icon:'icon-alert-circle'})\">Icon error</vs-button>\n\n      <vs-button color=\"dark\" type=\"flat\"\n        @click=\"$vs.notify({\n          title:'Icon mail',\n          text:'Lorem ipsum dolor sit amet, consectetur',\n          color:'dark',\n          iconPack: 'feather',\n          icon:'icon-message-square'})\">Icon chat</vs-button>\n\n      <vs-button @click=\"randomIcon()\" color=\"success\" type=\"gradient\">Icon Random Color</vs-button>\n    </div>\n\n    <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;div class=&quot;demo-alignment&quot;&gt;\n\n    &lt;vs-button color=&quot;primary&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({\n        title:&apos;Icon mail&apos;,\n        text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color:&apos;primary&apos;,\n        iconPack: &apos;feather&apos;,\n        icon:&apos;icon-mail&apos;})&quot;&gt;Icon Mail&lt;/vs-button&gt;\n\n    &lt;vs-button color=&quot;success&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({\n        title:&apos;Icon mail&apos;,\n        text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color:&apos;success&apos;,\n        iconPack: &apos;feather&apos;,\n        icon:&apos;icon-check&apos;})&quot;&gt;Icon check_box&lt;/vs-button&gt;\n\n    &lt;vs-button color=&quot;danger&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({\n        title:&apos;Icon mail&apos;,\n        text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color:&apos;danger&apos;,\n        iconPack: &apos;feather&apos;,\n        icon:&apos;icon-heart&apos;})&quot;&gt;Icon favorite&lt;/vs-button&gt;\n\n    &lt;vs-button color=&quot;warning&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({\n        title:&apos;Icon mail&apos;,\n        text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color:&apos;warning&apos;,\n        iconPack: &apos;feather&apos;,\n        icon:&apos;icon-alert-circle&apos;})&quot;&gt;Icon error&lt;/vs-button&gt;\n\n    &lt;vs-button color=&quot;dark&quot; type=&quot;flat&quot;\n      @click=&quot;$vs.notify({\n        title:&apos;Icon mail&apos;,\n        text:&apos;Lorem ipsum dolor sit amet, consectetur&apos;,\n        color:&apos;dark&apos;,\n        iconPack: &apos;feather&apos;,\n        icon:&apos;icon-message-square&apos;})&quot;&gt;Icon chat&lt;/vs-button&gt;\n\n      &lt;vs-button @click=&quot;randomIcon()&quot; color=&quot;success&quot; type=&quot;gradient&quot;&gt;Icon Random Color&lt;/vs-button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  methods: {\n    randomIcon() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = &grave;rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})&grave;\n\n      this.$vs.notify({ title: &amp;apos;Icon mail&amp;apos;, text: &amp;apos;Lorem ipsum dolor sit amet, consectetur&amp;apos;, color: color, icon: &amp;apos;verified_user&amp;apos; })\n    }\n  }\n}\n&lt;/script&gt;\n    </template>\n\n  </vx-card>\n</template>\n\n<script>\nexport default {\n  methods: {\n    randomIcon() {\n      function getRandomInt(min, max) {\n        return Math.floor(Math.random() * (max - min)) + min;\n      }\n      let color = `rgb(${getRandomInt(0,255)},${getRandomInt(0,255)},${getRandomInt(0,255)})`\n\n      this.$vs.notify({ title: 'Icon Award', text: 'Lorem ipsum dolor sit amet, consectetur', color: color, icon: 'icon-award', iconPack: 'feather' })\n    }\n  }\n}\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsIcon.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsIcon.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsIcon.vue?vue&type=template&id=4accac94&\"\nimport script from \"./NotificationsIcon.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsIcon.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Fixed and function click\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\"Sometimes we need to execute a function when the user clicks on the notification. For this, pass a function to the click property. Example: \"),_c('code',[_vm._v(\"click:()=>{ ... }\")])]),_c('vs-button',{staticClass:\"mt-4\",attrs:{\"type\":\"gradient\",\"color\":\"success\"},on:{\"click\":function($event){return _vm.myFunction()}}},[_vm._v(\"Run Example\")]),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n  <vs-button @click=\\\"myFunction()\\\" type=\\\"gradient\\\" color=\\\"success\\\" class=\\\"my-4\\\">Run Example</vs-button>\\n</template>\\n\\n<script>\\nexport default {\\n  methods: {\\n    myFunction() {\\n      this.$vs.notify({\\n        title: 'Function click',\\n        text: 'Click on me to execute function',\\n        color: 'primary',\\n        fixed: true,\\n        click: () => {\\n          // Secondary function\\n          this.$vs.notify({\\n            title: 'Secondary function',\\n            text: 'Executed the function when clicking',\\n            color: 'success',\\n            iconPack: 'feather',\\n            icon: 'icon-check'\\n          })\\n        },\\n      })\\n    },\\n  }\\n}\\n</script>\\n        \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<!-- =========================================================================================\n    File Name: NotificationsFixedAndFunctionClick.vue\n    Description: Rendering of default notifications\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <vx-card title=\"Fixed and function click\" code-toggler>\n        \n        <p>Sometimes we need to execute a function when the user clicks on the notification. For this, pass a function to the click property. Example: <code>click:()=>{ ... }</code></p>\n\n        <vs-button @click=\"myFunction()\" type=\"gradient\" color=\"success\" class=\"mt-4\">Run Example</vs-button>\n\n        <template slot=\"codeContainer\">\n&lt;template&gt;\n  &lt;vs-button @click=&quot;myFunction()&quot; type=&quot;gradient&quot; color=&quot;success&quot; class=&quot;my-4&quot;&gt;Run Example&lt;/vs-button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  methods: {\n    myFunction() {\n      this.$vs.notify({\n        title: &apos;Function click&apos;,\n        text: &apos;Click on me to execute function&apos;,\n        color: &apos;primary&apos;,\n        fixed: true,\n        click: () =&gt; {\n          // Secondary function\n          this.$vs.notify({\n            title: &apos;Secondary function&apos;,\n            text: &apos;Executed the function when clicking&apos;,\n            color: &apos;success&apos;,\n            iconPack: &apos;feather&apos;,\n            icon: &apos;icon-check&apos;\n          })\n        },\n      })\n    },\n  }\n}\n&lt;/script&gt;\n        </template>\n\n    </vx-card>\n</template>\n\n<script>\nexport default {\n    methods: {\n        myFunction() {\n            this.$vs.notify({\n                title: 'Function click',\n                text: 'Click on me to execute function',\n                color: 'primary',\n                fixed: true,\n                click: () => {\n                    // Secondary function\n                    this.$vs.notify({\n                        title: 'Secondary function',\n                        text: 'Executed the function when clicking',\n                        color: 'success',\n                        iconPack: 'feather',\n                        icon: 'icon-check'\n                    })\n                },\n            })\n        },\n    }\n}\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./NotificationsFixedAndFunctionClick.vue?vue&type=template&id=413cecfd&\"\nimport script from \"./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"\nexport * from \"./NotificationsFixedAndFunctionClick.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('vx-card',{attrs:{\"title\":\"Time\",\"code-toggler\":\"\"}},[_c('p',[_vm._v(\"You can change the total time that the notification stays on the screen with the \"),_c('code',[_vm._v(\"time\")]),_vm._v(\" property. Example: \"),_c('code',[_vm._v(\"time: 4000\")])]),_c('vs-alert',{staticClass:\"mt-5\",attrs:{\"color\":\"primary\",\"icon\":\"new_releases\",\"active\":\"true\"}},[_c('p',[_vm._v(\"By default the notifications have a time of \"),_c('strong',[_vm._v(\"2000\")]),_vm._v(\" (2s)\")])]),_c('div',{staticClass:\"demo-alignment\"},[_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){return _vm.$vs.notify({\n                title:'Time default',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                iconPack: 'feather',\n                icon: 'icon-clock'\n                })}}},[_vm._v(\"Time default\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n                time:4000,\n                title:'Time 4s (4000)',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                iconPack: 'feather',\n                icon: 'icon-clock'\n                })}}},[_vm._v(\"Time 4s (4000)\")]),_c('vs-button',{attrs:{\"color\":\"primary\",\"type\":\"flat\"},on:{\"click\":function($event){_vm.$vs.notify({\n                time:8000,\n                title:'Time 8s (8000)',\n                text:'Lorem ipsum dolor sit amet consectetur',\n                color:'primary',\n                iconPack: 'feather',\n                icon: 'icon-clock'\n                })}}},[_vm._v(\"Time 8s (8000)\")])],1),_c('template',{slot:\"codeContainer\"},[_vm._v(\"\\n<template>\\n  <div class=\\\"demo-alignment\\\">\\n\\n    <vs-button @click=\\\"$vs.notify({\\n        title:'Time default',\\n        text:'Lorem ipsum dolor sit amet consectetur',\\n        color:'primary',\\n        iconPack: 'feather',\\n        icon: 'icon-clock'\\n        })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time default</vs-button>\\n\\n    <vs-button @click=\\\"$vs.notify({\\n        time:4000,\\n        title:'Time 4s (4000)',\\n        text:'Lorem ipsum dolor sit amet consectetur',\\n        color:'primary',\\n        iconPack: 'feather',\\n        icon: 'icon-clock'\\n        })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time 4s (4000)</vs-button>\\n        \\n    <vs-button @click=\\\"$vs.notify({\\n        time:8000,\\n        title:'Time 8s (8000)',\\n        text:'Lorem ipsum dolor sit amet consectetur',\\n        color:'primary',\\n        iconPack: 'feather',\\n        icon: 'icon-clock'\\n        })\\\" color=\\\"primary\\\" type=\\\"flat\\\">Time 8s (8000)</vs-button>\\n  </div>\\n</template>\\n        \")])],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./NotificationsTime.vue?vue&type=template&id=4f529c86&\"\nvar script = {}\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<!-- =========================================================================================\n    File Name: Notifications.vue\n    Description: Notifications - Imports all page portions\n    ----------------------------------------------------------------------------------------\n    Item Name: Vuesax Admin - VueJS Dashboard Admin Template\n      Author: Pixinvent\n    Author URL: http://www.themeforest.net/user/pixinvent\n========================================================================================== -->\n\n\n<template>\n    <div id=\"notifications-demo\">\n\n        <p class=\"mb-4\">Nice, simple, and interactive notifications</p>\n\n        <notifications-default></notifications-default>\n        <notifications-position></notifications-position>\n        <notifications-icon></notifications-icon>\n        <notifications-fixed-and-function-click></notifications-fixed-and-function-click>\n        <notifications-time></notifications-time>\n    </div>\n</template>\n\n<script>\nimport NotificationsDefault from './NotificationsDefault.vue'\nimport NotificationsPosition from './NotificationsPosition.vue'\nimport NotificationsIcon from './NotificationsIcon.vue'\nimport NotificationsFixedAndFunctionClick from './NotificationsFixedAndFunctionClick.vue'\nimport NotificationsTime from './NotificationsTime.vue'\n\nexport default{\n    components: {\n        NotificationsDefault,\n        NotificationsPosition,\n        NotificationsIcon,\n        NotificationsFixedAndFunctionClick,\n        NotificationsTime,\n    }   \n}\n</script>","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/@vue/cli-plugin-babel/node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Notifications.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Notifications.vue?vue&type=template&id=547c3e67&\"\nimport script from \"./Notifications.vue?vue&type=script&lang=js&\"\nexport * from \"./Notifications.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}